{"version":3,"sources":["actions/instance.js","components/DashBoard/Instance/Instances.js","components/DashBoard/Instance/InstanceItem.js","components/DashBoard/Instance/NewInstance.js","containers/InstanceContainer/InstanceContainer.js"],"names":["fetchInstancesRequest","_ref","Object","F_code_reactjs_PROJECT_Porject_iot_kof_dashboard_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_1__","F_code_reactjs_PROJECT_Porject_iot_kof_dashboard_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default","a","mark","_callee","dispatch","token","fetchInstances","wrap","_context","prev","next","localStorage","getItem","apiCall","sent","data","error","fetchInstanceFailure","fetchIntancesSuccess","t0","stop","this","_x","apply","arguments","instances","type","INSTANCE","FETCH_INSTANCE_SUCCESS","payload","message","FETCH_INSTANCE_FAILURE","fetchNewInstanceRequest","_ref2","_callee2","_context2","fetchNewInstanceFailure","fetchNewInstance","_x2","newInstance","FETCH_NEW_INSTANCE_SUCCESS","FETCH_NEW_INSTANCE_FAILURE","getInstanceByIDRequest","_id","_ref3","_callee3","getInstance","_context3","concat","getInstanceByID","console","log","_x3","instance","DETAIL_INSTANCE","changeStatusRequest","idInstance","status","_ref4","_callee4","res","_context4","changeStatus","_x4","CHANGE_STATUS","changeUserRequest","_ref5","_callee5","_context5","changeUser","_x5","CHANGE_USER","changePasswordRequest","_ref6","_callee6","_context6","changePassword","_x6","CHANGE_PASSWORD","Instance","react_default","createElement","react","className","props","allInstance","Component","InstanceItem","_onDetailInstance","_this","history","push","_this$props","index","onClick","server","port","user","pwd","NewInstance","_onCreateInstance","createInstance","placeholder","createAt","disabled","defaultValue","owner","InstanceContainer","_showInstanceItem","result","length","map","item","Instance_InstanceItem","key","_showNewInstance","Instance_NewInstance","_createInstance","Instances","connect","state","ownProps","detailInstance"],"mappings":"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","file":"static/js/4.49997343.chunk.js","sourcesContent":["import { INSTANCE } from '../constants/action-type';\r\nimport { apiCall } from '../utils/api-call';\r\n\r\nexport const fetchInstancesRequest = () => {\r\n\treturn async dispatch => {\r\n\t\ttry {\r\n\t\t\t// const token = 'Bearer '.concat(localStorage.getItem('token'));\r\n\t\t\tconst token = localStorage.getItem('token');\r\n\t\t\tlet fetchInstances = await apiCall('/instaces', 'GET', null, { token });\r\n\t\t\t// console.log(fetchInstances.data);\r\n\t\t\tif (!fetchInstances.data.error) {\r\n\t\t\t\t// console.log(fetchInstances.data.data);\r\n\t\t\t\tdispatch(fetchIntancesSuccess(fetchInstances.data.data));\r\n\t\t\t} else dispatch(fetchInstanceFailure('cannot get data from headers!'));\r\n\r\n\t\t} catch (error) {\r\n\t\t\tdispatch(fetchInstanceFailure('cannot get data from headers!'));\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport const fetchIntancesSuccess = instances => {\r\n\t// console.log(instances)\r\n\treturn {\r\n\t\ttype: INSTANCE.FETCH_INSTANCE_SUCCESS,\r\n\t\tpayload: instances\r\n\t}\r\n}\r\n\r\nexport const fetchInstanceFailure = message => {\r\n\treturn {\r\n\t\ttype: INSTANCE.FETCH_INSTANCE_FAILURE,\r\n\t\tmessage\r\n\t}\r\n}\r\n\r\nexport const fetchNewInstanceRequest = () => {\r\n\treturn async dispatch => {\r\n\t\ttry {\r\n\t\t\tconst token = localStorage.getItem('token');\r\n\t\t\tlet fetchInstances = await apiCall('/instaces', 'POST', null, { token });\r\n\t\t\t// console.log(fetchInstances.data);\r\n\t\t\tif (!fetchInstances.data.error) {\r\n\t\t\t\tdispatch(fetchNewInstance(fetchInstances.data.data));\r\n\t\t\t} else dispatch(fetchNewInstanceFailure());\r\n\r\n\t\t} catch (error) {\r\n\t\t\tdispatch(fetchNewInstanceFailure());\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport const fetchNewInstance = newInstance => {\r\n\treturn {\r\n\t\ttype: INSTANCE.FETCH_NEW_INSTANCE_SUCCESS,\r\n\t\tpayload: newInstance\r\n\t}\r\n}\r\n\r\nexport const fetchNewInstanceFailure = () => {\r\n\treturn {\r\n\t\ttype: INSTANCE.FETCH_NEW_INSTANCE_FAILURE,\r\n\t\tmessage: 'cannot get new instance!'\r\n\t}\r\n}\r\n\r\nexport const getInstanceByIDRequest = (_id) => {\r\n\treturn async dispatch => {\r\n\t\ttry {\r\n\t\t\tconst token = localStorage.getItem('token');\r\n\t\t\tlet getInstance = await apiCall(`/instaces/${_id}`, 'GET', null, { token });\r\n\r\n\t\t\tif (!getInstance.data.error) {\r\n\t\t\t\tdispatch(getInstanceByID(getInstance.data.data));\r\n\t\t\t\t// history.push(`/dashboard/instance/${_id}`, { instance: getInstance.data.data });\r\n\t\t\t}\r\n\t\t} catch (error) {\r\n\t\t\tconsole.log(error)\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport const getInstanceByID = instance => {\r\n\treturn {\r\n\t\ttype: INSTANCE.DETAIL_INSTANCE,\r\n\t\tpayload: instance\r\n\t}\r\n}\r\n\r\nexport const changeStatusRequest = (idInstance, status) => {\r\n\treturn async dispatch => {\r\n\t\ttry {\r\n\t\t\tconst token = localStorage.getItem('token');\r\n\t\t\tlet res = await apiCall(`/instaces/${idInstance}/${status === 1 ? 0 : 1}`, 'GET', null, { token })\r\n\r\n\t\t\tif (!res.data.error) {\r\n\t\t\t\tdispatch(changeStatus(res.data.data))\r\n\t\t\t}\r\n\t\t} catch (error) {\r\n\t\t\tconsole.log({error});\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport const changeStatus = instance => {\r\n\treturn {\r\n\t\ttype: INSTANCE.CHANGE_STATUS,\r\n\t\tpayload: instance\r\n\t}\r\n}\r\n\r\nexport const changeUserRequest = (idInstance) => {\r\n\treturn async dispatch => {\r\n\t\ttry {\r\n\t\t\tconst token = localStorage.getItem('token');\r\n\t\t\tlet res = await apiCall(`/instaces/update-user/${idInstance}`, 'GET', null, { token })\r\n\t\t\tif (!res.data.error) {\r\n\t\t\t\tdispatch(changeUser(res.data.data))\r\n\t\t\t}\r\n\t\t} catch (error) {\r\n\t\t\tconsole.log({error});\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport const changeUser = instance => {\r\n\treturn {\r\n\t\ttype: INSTANCE.CHANGE_USER,\r\n\t\tpayload: instance\r\n\t}\r\n}\r\n\r\nexport const changePasswordRequest = (idInstance) => {\r\n\treturn async dispatch => {\r\n\t\ttry {\r\n\t\t\tconst token = localStorage.getItem('token');\r\n\t\t\tlet res = await apiCall(`/instaces/update-pwd/${idInstance}`, 'GET', null, { token })\r\n\r\n\t\t\tif (!res.data.error) {\r\n\t\t\t\tdispatch(changePassword(res.data.data))\r\n\t\t\t}\r\n\t\t} catch (error) {\r\n\t\t\tconsole.log({error});\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport const changePassword = instance => {\r\n\treturn {\r\n\t\ttype: INSTANCE.CHANGE_PASSWORD,\r\n\t\tpayload: instance\r\n\t}\r\n}","import React, { Component, Fragment } from 'react';\r\n// import PropTypes from 'prop-types';\r\n\r\n\r\n// const propTypes = {\r\n\r\n// };\r\n\r\n\r\nclass Instance extends Component {\r\n   render() {\r\n      return (\r\n         <Fragment>\r\n            <div className=\"content\">\r\n               <div className=\"container-fluid\">\r\n                  <div className=\"container\">\r\n                     <h2>All Instance</h2>\r\n                     {/* <p>Combine .table-dark and .table-striped to create a dark, striped table:</p> */}\r\n                     <table className=\"table table-dark table-striped table-hover\">\r\n                        <thead>\r\n                           <tr>\r\n                              <th>#</th>\r\n                              <th>Server</th>\r\n                              <th>Status</th>\r\n                              <th>Port</th>\r\n                              {/* <th>ID</th> */}\r\n                              <th>User</th>\r\n                              <th>Password</th>\r\n                              <th>Owner</th>\r\n                              <th>Action</th>\r\n                           </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                           {this.props.allInstance}\r\n                        </tbody>\r\n                     </table>\r\n                  </div>\r\n\r\n                  <div className=\"container\">\r\n\r\n                     {/* <p>Combine .table-dark and .table-striped to create a dark, striped table:</p> */}\r\n                     {this.props.newInstance}\r\n                  </div>\r\n\r\n               </div>\r\n               {/* container-fluid */}\r\n            </div>\r\n         </Fragment>\r\n      );\r\n   }\r\n}\r\n\r\n\r\n// Instance.propTypes = propTypes;\r\n\r\n\r\nexport default Instance;\r\n","import React, { Component, Fragment } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\n\r\nconst propTypes = {\r\n  instance: PropTypes.object.isRequired,\r\n  index: PropTypes.number,\r\n};\r\n\r\nclass InstanceItem extends Component {\r\n\r\n  _onDetailInstance = () => {\r\n    this.props.history.push(`/instance/${this.props.instance._id}`);\r\n  }\r\n\r\n  render() {\r\n    const { instance, index } = this.props;\r\n\r\n    return (\r\n      <Fragment>\r\n        <tr onClick={this._onDetailInstance}>\r\n          <td>{index + 1}</td>\r\n          <td>{instance.server}</td>\r\n          <td>{instance.status === 1 ? <span className=\"badge badge-success\">Đã hoạt động</span> : <span className=\"badge badge-dark\">Không hoạt động</span>}</td>\r\n          <td>{instance.port}</td>\r\n          {/* <td>{instance._id}</td> */}\r\n          <td>{instance.user}</td>\r\n          <td>{instance.pwd}</td>\r\n          <td>OWNER</td>\r\n          <td><button type=\"button\" className=\"btn btn-outline-danger\">Delete</button></td>\r\n        </tr>\r\n      </Fragment>\r\n    );\r\n  }\r\n}\r\n\r\n\r\nInstanceItem.propTypes = propTypes;\r\n\r\n\r\nexport default InstanceItem;\r\n","import React, { Component, Fragment } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\n\r\nconst propTypes = {\r\n   instance: PropTypes.object.isRequired\r\n};\r\n\r\n\r\nclass NewInstance extends Component {\r\n\r\n   _onCreateInstance = () => {\r\n      this.props.createInstance();\r\n   }\r\n\r\n   render() {\r\n      const { instance } = this.props;\r\n    //   console.log(instance);\r\n      return (\r\n         <Fragment>\r\n            <div className=\"card\">\r\n               <div className=\"card-header\">\r\n                  <h2>Create new Instance</h2>\r\n                  <button type=\"button\" className=\"btn btn-outline-success\" onClick={this._onCreateInstance} >Create Instance</button>\r\n               </div>\r\n               <div className=\"card-body\">\r\n                  <div className=\"col-xs-4 col-sm-4 col-md-4 col-lg-4\">\r\n                     <span className=\"badge badge-info mr-50\" placeholder='Server...'>{instance.server}</span>\r\n                     <span className=\"badge badge-info\" placeholder='Create_At...'>{instance.createAt}</span>\r\n                  </div>\r\n                  <form>\r\n                     <fieldset disabled >\r\n                        <div className=\"row\">\r\n                           <div className=\"col-xs-4 col-sm-4 col-md-4 col-lg-4\">\r\n                              <div className=\"form-group\">\r\n                                 <label >Owner</label>\r\n                                 <input type=\"text\" className=\"form-control\" defaultValue={instance.owner} placeholder=\"Owner...\" />\r\n                              </div>\r\n                              <div className=\"form-group\">\r\n                                 <label >Status</label>\r\n                                 <input type=\"text\" className=\"form-control\" defaultValue={instance.status} placeholder=\"Status...\" />\r\n                              </div>\r\n                           </div>\r\n\r\n                           <div className=\"col-xs-4 col-sm-4 col-md-4 col-lg-4\">\r\n                              <div className=\"form-group\">\r\n                                 <label >Port</label>\r\n                                 <input type=\"text\" className=\"form-control\" defaultValue={instance.port} placeholder=\"Port...\" />\r\n                              </div>\r\n                              <div className=\"form-group\">\r\n                                 <label >ID</label>\r\n                                 <input type=\"text\" className=\"form-control\" defaultValue={instance._id} placeholder=\"ID...\" />\r\n                              </div>\r\n                           </div>\r\n\r\n                           <div className=\"col-xs-4 col-sm-4 col-md-4 col-lg-4\">\r\n                              <div className=\"form-group\">\r\n                                 <label >User</label>\r\n                                 <input type=\"text\" className=\"form-control\" defaultValue={instance.user} placeholder=\"User...\" />\r\n                              </div>\r\n                              <div className=\"form-group\">\r\n                                 <label >Password</label>\r\n                                 <input type=\"text\" className=\"form-control\" defaultValue={instance.pwd} placeholder=\"Password...\" />\r\n                              </div>\r\n                           </div>\r\n                        </div>\r\n                     </fieldset>\r\n                  </form>\r\n               </div>\r\n            </div>\r\n\r\n         </Fragment >\r\n      );\r\n   }\r\n}\r\n\r\n\r\nNewInstance.propTypes = propTypes;\r\n\r\n\r\nexport default NewInstance;\r\n","import React, { Component, Fragment } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Instances from '../../components/DashBoard/Instance/Instances';\r\nimport { fetchInstancesRequest, fetchNewInstanceRequest, getInstanceByIDRequest } from '../../actions/instance';\r\nimport { connect } from 'react-redux';\r\nimport InstanceItem from '../../components/DashBoard/Instance/InstanceItem';\r\nimport NewInstance from '../../components/DashBoard/Instance/NewInstance';\r\n\r\n\r\nconst propTypes = {\r\n    newInstance            : PropTypes.object.isRequired,\r\n    instances              : PropTypes.array.isRequired,\r\n    fetchInstancesRequest  : PropTypes.func.isRequired,\r\n    fetchNewInstanceRequest: PropTypes.func.isRequired\r\n};\r\n\r\n\r\nclass InstanceContainer extends Component {\r\n\r\n    componentDidMount() {\r\n        this.props.fetchInstancesRequest();\r\n        // this.props.fetchNewInstanceRequest();\r\n    }\r\n\r\n    _showInstanceItem = instances => {\r\n        var result = null;\r\n        if (instances.length > 0) {\r\n            // console.log(instances.length);\r\n            result = instances.map((item, index) => <InstanceItem\r\n                key              = {index}\r\n                index            = {index}\r\n                instance         = {item}\r\n                history = {this.props.history}/>)\r\n        }\r\n\r\n        return result;\r\n    }\r\n\r\n    // _showDetailInstance = _id => {\r\n    //     this.props.getInstanceByIDRequest(_id, this.props.history);\r\n    // }\r\n\r\n    _showNewInstance = instance => {\r\n        return <NewInstance instance={instance} createInstance={this._createInstance} />\r\n    }\r\n\r\n    _createInstance = () => {\r\n        this.props.fetchNewInstanceRequest();\r\n        this.props.fetchInstancesRequest();\r\n    }\r\n\r\n    render() {\r\n        const { instances, newInstance } = this.props;\r\n        // console.log(instances)\r\n        return (\r\n            <Fragment>\r\n                <Instances allInstance={this._showInstanceItem(instances)} newInstance={this._showNewInstance(newInstance)} />\r\n            </Fragment>\r\n        );\r\n    }\r\n}\r\n\r\n\r\nInstanceContainer.propTypes = propTypes;\r\n\r\nconst mapStateToProps = (state, ownProps) => {\r\n    return {\r\n        instances      : state.instances,\r\n        newInstance    : state.newInstance,\r\n        getInstanceByID: state.detailInstance\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch, ownProps) => {\r\n    return {\r\n        fetchInstancesRequest: () => {\r\n            dispatch(fetchInstancesRequest())\r\n        },\r\n        fetchNewInstanceRequest: () => {\r\n            dispatch(fetchNewInstanceRequest())\r\n        },\r\n        getInstanceByIDRequest: (_id, history) => {\r\n            dispatch(getInstanceByIDRequest(_id, history))\r\n        }\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(InstanceContainer);\r\n"],"sourceRoot":""}